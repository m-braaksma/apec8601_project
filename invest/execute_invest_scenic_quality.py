# coding=UTF-8
# -----------------------------------------------
# Generated by InVEST 3.13.0 on Mon Apr  8 15:03:53 2024
# Model: Scenic Quality

import logging
import sys
import geopandas as gpd
import os
import pygeoprocessing as pygeo
import numpy as np

import natcap.invest.scenic_quality.scenic_quality
import natcap.invest.utils

LOGGER = logging.getLogger(__name__)
root_logger = logging.getLogger()

handler = logging.StreamHandler(sys.stdout)
formatter = logging.Formatter(
    fmt=natcap.invest.utils.LOG_FMT,
    datefmt='%m/%d/%Y %H:%M:%S ')
handler.setFormatter(formatter)
logging.basicConfig(level=logging.INFO, handlers=[handler])

args = {
    'a_coef': '',
    'aoi_path': '/Users/mbraaksma/Files/base_data/invest_sample_data/ScenicQuality/Input/AOI_WCVI.shp',
    'b_coef': '',
    'dem_path': '/Users/mbraaksma/Files/base_data/invest_sample_data/ScenicQuality/Input/claybark_dem.tif',
    'do_valuation': False,
    'max_valuation_radius': '',
    'n_workers': '-1',
    'refraction': '0.13',
    'results_suffix': '',
    'structure_path': '/Users/mbraaksma/Files/base_data/invest_sample_data/ScenicQuality/Input/AquaWEM_points.shp',
    'valuation_function': 'linear',
    'workspace_dir': '/Users/mbraaksma/Files/base_data/invest_sample_data/ScenicQuality/Output',
}


# Create 5 different versions of the AquaWEM_points shapefile
# Add varying height variable
scenario_list = [1, 5, 10, 25, 50, 75, 100, 150, 200, 300]
os.chdir(os.path.dirname(__file__))
for scenario in scenario_list:
    # Read in shapefile
    gdf = gpd.read_file('Input/AquaWEM_points.shp')
    # Generate height variable
    gdf['height'] = scenario
    # Export the modified GeoDataFrame to a GPKG shapefile
    gdf.to_file(f'Input/AquaWEM_points_height{scenario}.gpkg', driver='GPKG')


if __name__ == '__main__':

    # Run scenarios
    for scenario in scenario_list:
        args['structure_path'] = f'Input/AquaWEM_points_height{scenario}.gpkg'

        # Create output directory if it doesn't exist
        output_dir = f'output_scenario_height{scenario}'
        os.makedirs(output_dir, exist_ok=True)

        args['workspace_dir']= output_dir
        print(args)
        natcap.invest.scenic_quality.scenic_quality.execute(args)

    # Calculate and print total visibility
    for scenario in scenario_list:
        output_dir = f'output_scenario_height{scenario}/output'
        raster_path = output_dir + '/vshed.tif'
        # Import as array
        visibility_array = pygeo.raster_to_numpy_array(raster_path)
        # Remove missing values (-1) and sum
        total_structure_visibility = np.where(visibility_array==-1, 0, visibility_array).sum() 
        print('Total Structure Points Visible for HEIGHT=', scenario, ':', total_structure_visibility)

